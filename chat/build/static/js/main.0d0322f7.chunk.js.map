{"version":3,"sources":["logo.svg","services/service.js","services/auth.js","utils/socket.js","services/messages.js","data-provider/user.js","component/auth/login.js","component/auth/signup.js","component/auth/index.js","component/chat/chat_users_list.js","component/chat/chat_content.js","component/utills/navbar.js","component/chat/video/video-chat.js","component/chat/chat.js","App.js","data-provider/provider.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","post","path","param","Promise","resolve","reject","Axios","then","result","status","data","catch","err","getUserList","get","login","userName","password","createUser","phoneNo","email","gender","SocketIO","userId","Object","classCallCheck","this","socket","socketIO","connect","instance","on","emit","getAllMessage","selected_user_id","UserContext","React","createContext","UserContextClass","_this","possibleConstructorReturn","getPrototypeOf","call","console","log","setState","userList","state","user","id","selectedUser","_id","userMessages","objectSpread","defineProperty","selectUserToChat","storeUser","userData","sessionStorage","setItem","SocketIo","fromId","concat","toConsumableArray","auth","sendCallBack","callback","toId","react_default","a","createElement","Provider","value","props","children","Component","Login","e","preventDefault","stopPropagation","context","Response","_this2","className","Container","fluid","Row","Col","sm","md","lg","xl","xs","onSubmit","Form","Group","as","Label","column","Control","ref","el","type","placeholder","Button","onClick","react_router_dom","to","contextType","SignUp","phoneNumber","INDEX","react_router","exact","component","ChatUserList","ListGroup","map","ListGroupItem","chatContent","sendMessage","message","messageInput","sendMessageRef","scrollTop","scrollHeight","onKeyEnter","keyCode","videoCall","key","Card","InputGroup","FormControl","onKeyPress","aria-label","aria-describedby","Append","variant","mdbreact_esm","icon","NavComponent","Navbar","Brand","href","alt","src","width","height","VideoChat","sendData","connecting","initiator","gotMedia","stream","peer","Peer","trickle","toID","initiatorSocketId","initiatorId","signal","send","videoRef","srcObject","play","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","audio","_this3","onCancel","chat","showVideo","socketId","navbar_NavComponent","chat_users_list_ChatUserList","style","background","chat_content_chatContent","video_chat_VideoChat","App","loading","getItem","chat_chat","withRouter","MyProvider","data_provider_user","Boolean","window","location","hostname","match","ReactDOM","render","provider_MyProvider","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mbCa7BC,EAAK,SAACC,EAAKC,GAAN,OAAc,IAAIC,QAAQ,SAACC,EAAQC,GAC/CC,IAAMN,KAAK,4BAA8BC,EAAKC,GAAOK,KAAK,SAAAC,GACpC,KAAfA,EAAOC,OACVL,EAAQI,EAAOE,MAEXL,EAAO,CACHI,OAAOD,EAAOC,OACdC,KAAKF,EAAOE,SAGrBC,MAAM,SAAAC,GACLP,EAAO,CACHI,OAAOG,EAAIH,OACXC,KAAKE,EAAIF,YCxBRG,EAAY,kBDATZ,ECAiB,qBDAV,IAAIE,QAAQ,SAACC,EAAQC,GACxCC,IAAMQ,IAAI,4BAA8Bb,GAAMM,KAAK,SAAAC,GAC/CJ,EAAQI,EAAOE,QAChBC,MAAM,SAAAC,GACLP,EAAO,CACHI,OAAOG,EAAIH,OACXC,KAAKE,EAAIF,WANN,IAACT,GCCHc,EAAM,SAACC,EAASC,GAAV,OAAqBjB,EAAK,kBAAkB,CAC3DgB,WAASC,cAMAC,EAAW,SAAKF,EAAYG,EAAUC,EAAQC,EAAQJ,GAA3C,OACxBjB,EAAK,uBAAuB,CACxBgB,WACAG,UACAC,QACAC,SACAJ,+BCfiBK,aACjB,SAAAA,EAAYC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAChBI,KAAKH,OAAOA,EACZG,KAAKC,OAAOC,IAASC,QAAQ,mFAEdN,GACf,IAAIO,EAAS,IAAIR,EAASC,GAC1BD,EAASQ,SAASA,EAClBA,EAASH,OAAOI,GAAG,gBAAgB,SAACJ,GAEhCG,EAASH,OAAOK,KAAK,WAAWT,qBAInC,OAAOD,EAASQ,SAASH,wCCbrBM,EAAc,SAACV,EAAOW,GAAR,OAA4BlC,EAAK,wBAAwB,CAACuB,SAAOW,sBCE/EC,EAAcC,IAAMC,cAAc,IA+EhCC,cA7EX,SAAAA,IAAc,IAAAC,EAAA,OAAAf,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACVC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAE,KAAAF,OAAAiB,EAAA,EAAAjB,CAAAc,GAAAI,KAAAhB,QAaJb,YAAY,WACRA,IAAcN,KAAK,SAAAC,GACfmC,QAAQC,IAAIpC,GACZ+B,EAAKM,SAAS,CACVC,SAAStC,EAAOE,UAlBd6B,EAsBdN,cAAc,WACVA,EAAcM,EAAKQ,MAAMC,KAAKC,GAAGV,EAAKQ,MAAMG,aAAaC,KAAK5C,KAAK,SAAAC,GAE/D+B,EAAKM,SAAS,CACVO,aAAa5B,OAAA6B,EAAA,EAAA7B,CAAA,GACNe,EAAKQ,MAAMK,aADN5B,OAAA8B,EAAA,EAAA9B,CAAA,GAEPe,EAAKQ,MAAMG,aAAaC,IAAM3C,EAAOA,cA5BxC+B,EAiCdgB,iBAAiB,SAACP,GACdT,EAAKM,SAAS,CACVK,aAAaF,GACfT,EAAKN,gBApCGM,EAsCdiB,UAAY,SAACC,GAAa,IAChBzC,EAAkCyC,EAAlCzC,SAAUG,EAAwBsC,EAAxBtC,QAASE,EAAeoC,EAAfpC,OAAO8B,EAAQM,EAARN,IAChCO,eAAeC,QAAQ,UAAUF,EAASN,KAE1CS,EAASjC,OAAOwB,EAChBS,EAASjC,OAAOI,GAAG,UAAU,SAACrB,GAC1BiC,QAAQC,IAAIlC,GACZ6B,EAAKM,SAAS,CAEVO,aAAa5B,OAAA6B,EAAA,EAAA7B,CAAA,GACNe,EAAKQ,MAAMK,aADN5B,OAAA8B,EAAA,EAAA9B,CAAA,GAEPd,EAAKmD,OAAStB,EAAKQ,MAAMK,aAAa1C,EAAKmD,QAA9B,GAAAC,OAAAtC,OAAAuC,EAAA,EAAAvC,CACHe,EAAKQ,MAAMK,aAAa1C,EAAKmD,SAD1B,CACkCnD,IAAhD,CAACA,SAIb6B,EAAKM,SAAS,CACVG,KAAK,CAAChC,WAAUG,UAASE,SAAO4B,GAAGE,GAAMa,MAAM,GACjDzB,EAAK1B,cAxDG0B,EA0Dd0B,aAAa,SAACvD,EAAKwD,GACf3B,EAAKM,SAAS,CAEVO,aAAa5B,OAAA6B,EAAA,EAAA7B,CAAA,GACNe,EAAKQ,MAAMK,aADN5B,OAAA8B,EAAA,EAAA9B,CAAA,GAEPd,EAAKyD,KAAO5B,EAAKQ,MAAMK,aAAa1C,EAAKyD,MAA9B,GAAAL,OAAAtC,OAAAuC,EAAA,EAAAvC,CACDe,EAAKQ,MAAMK,aAAa1C,EAAKyD,OAD5B,CACkCzD,IAA9C,CAACA,MAEPwD,IAhEF3B,EAAKQ,MAAQ,CACTiB,MAAM,EACNhB,KAAK,GACLF,SAAS,GACTI,aAAa,KACbM,UAAUjB,EAAKiB,UACfD,iBAAiBhB,EAAKgB,iBACtBU,aAAa1B,EAAK0B,aAClBb,aAAa,IAVPb,wEAqEV,OACI6B,EAAAC,EAAAC,cAACnC,EAAYoC,SAAb,CAAsBC,MAAO9C,KAAKqB,OAE1BrB,KAAK+C,MAAMC,iBAzEAtC,IAAMuC,WCI/BC,6MAOF7D,MAAQ,SAAC8D,GACLA,EAAEC,iBACFD,EAAEE,kBACF,IAAI/D,EAAWuB,EAAKvB,SAASwD,MACzBvD,EAAWsB,EAAKtB,SAASuD,MAE7BzD,EAAMC,EAAUC,GAAUV,KAAK,SAAAC,GAC3BmC,QAAQC,IAAIpC,GACZ+B,EAAKyC,QAAQxB,UAAUhD,EAAOE,4FAZlCG,IAAcN,KAAK,SAAA0E,GACftC,QAAQC,IAAIqC,sCAcX,IAAAC,EAAAxD,KAEL,OADAiB,QAAQC,IAAIlB,KAAKsD,SAEbZ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACXf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAWC,OAAO,GACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIT,UAAU,wBAChDf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAAA,QAAMa,UAAU,iBAAiBU,SAAUnE,KAAKX,OAC5CqD,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACV,GAAI,GAAvB,aACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACLpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAcC,IAAK,SAAAC,GAAE,OAAInB,EAAKlE,SAAWqF,GAAIH,QAAM,EAACV,GAAI,GAAIvC,GAAG,WAAWqD,KAAK,OAAOC,YAAY,4BAG1GnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACV,GAAI,GAAvB,YACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACLpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAcC,IAAK,SAAAC,GAAE,OAAInB,EAAKjE,SAAWoF,GAAIH,QAAM,EAACV,GAAI,GAAIvC,GAAG,WAAWqD,KAAK,WAAWC,YAAY,2BAG9GnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,KACI3B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,QAAS/E,KAAKX,MAAOuF,KAAK,SAASnB,UAAU,aAArD,SACAf,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMvB,UAAU,aAAawB,GAAI,WAAjC,aAhBZ,OAqBJvC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIT,UAAU,mEAChDf,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,KAAGa,UAAU,WAAb,4PAE5Bf,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAFsB,4PAG5BF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAHsB,wQAhDRlC,IAAMuC,WAApBC,EACKgC,YAAczE,EA4DVyC,QChETiC,6MAEF3F,WAAW,WAEPA,EACIqB,EAAKvB,SAASwD,MACdjC,EAAKuE,YAAYtC,MACjBjC,EAAKnB,MAAMoD,MACX,OACAjC,EAAKtB,SAASuD,OACZjE,KAAK,SAAAC,GACH+B,EAAKyC,QAAQxB,UAAUhD,EAAOE,iFAGlC,IAAAwE,EAAAxD,KACJ,OACR0C,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACff,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACoBhB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAGL,UAAU,wBACtBf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACMhB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAAEV,GAAI,GAAxB,aACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACTpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAcC,IAAK,SAAAC,GAAE,OAAEnB,EAAKlE,SAASqF,GAAIH,QAAM,EAACV,GAAI,GAAIc,KAAK,OAAOC,YAAY,4BAGpFnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAAEV,GAAI,GAAxB,SACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACTpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAeC,IAAK,SAAAC,GAAE,OAAEnB,EAAK4B,YAAYT,GAAIH,QAAM,EAACV,GAAI,GAAIc,KAAK,OAAOC,YAAY,wBAGxFnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAAEV,GAAI,GAAxB,SACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACTpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAeC,IAAK,SAAAC,GAAE,OAAEnB,EAAK9D,MAAMiF,GAAIH,QAAM,EAACV,GAAI,GAAIc,KAAK,QAAQC,YAAY,wBAGnFnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,GAAIV,KACZlB,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAAEV,GAAI,GAAxB,YACApB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,GACTpB,EAAAC,EAAAC,cAACwB,EAAA,EAAKK,QAAN,CAAeC,IAAK,SAAAC,GAAE,OAAEnB,EAAKjE,SAASoF,GAAIH,QAAM,EAACV,GAAI,GAAIc,KAAK,OAAOC,YAAY,2BAGrFnC,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,KACA3B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,QAAS/E,KAAKR,YAAtB,UACAkD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAMvB,UAAU,QAAQwB,GAAI,UAA5B,gBA5BR,iBApBHvE,IAAMuC,WAArBkC,EACKD,YAAYzE,EA2DR0E,gBCjDAE,mLAXP,OACR3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACQ5C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAU/G,KAAK,IAAIgH,OAAK,EAACN,GAAG,WAC5BvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAO/G,KAAK,SAASiH,UAAWtC,IAEhCR,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAO/G,KAAK,UAAUiH,UAAWL,YAPrBzE,IAAMuC,6BCALwC,2LAET,IAAA5E,EAAAb,KAEJ,OADAiB,QAAQC,IAAIlB,KAAKsD,SACTZ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACnBf,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KAEQ1F,KAAKsD,QAAQlC,SAASuE,IAAI,SAAArE,GAAI,OAAET,EAAKyC,QAAQhC,KAAKC,IAAID,EAAKG,KAAKiB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAenC,UAAW,mBAAmBnC,GAAMT,EAAKyC,QAAQ9B,aAAa,UAAU,IAAKuD,QAAS,kBAAIlE,EAAKyC,QAAQzB,iBAAiBP,KACvMoB,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACVnC,EAAKhC,SAAS,IAEnBoD,EAAAC,EAAAC,cAAA,OAAKa,UAAU,aACdnC,EAAKhC,sBAZgBoB,IAAMuC,YAA3BwC,EACVP,YAAczE,kDCCJoF,6MAEjBC,YAAc,WACV,IAAIC,EAAUlF,EAAKmF,aAAalD,MAChCjC,EAAKmF,aAAalD,MAAQ,GACtBiD,GACA7D,EAASjC,OAAOK,KAAK,eAAgB,CACjCyF,UACAtD,KAAM5B,EAAKyC,QAAQ9B,aAAaC,KACjC,SAAC3C,GACAmC,QAAQC,IAAIL,EAAKyC,SACjBzC,EAAKyC,QAAQf,aAAazD,EAAQ,WAC9B+B,EAAKoF,eAAeC,UAAYrF,EAAKoF,eAAeE,oBAMpEC,WAAa,SAACjD,GACO,IAAbA,EAAEkD,SACFlD,EAAEC,oBAGVkD,UAAU,WACNzF,EAAKkC,MAAMuD,UAAUzF,EAAKyC,QAAQ9B,aAAaC,KAAI,4EAE9C,IAAA+B,EAAAxD,KAEL,OADAiB,QAAQC,IAAIlB,KAAKsD,QAAQ9B,cAErBkB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAWC,OAAO,EAAMF,UAAU,OAC9Bf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,oBAAoBiB,IAAK,SAAAC,GAAE,OAAInB,EAAKyC,eAAiBtB,IAE5D3E,KAAKsD,QAAQ9B,cAEbxB,KAAKsD,QAAQ5B,aAAa1B,KAAKsD,QAAQ9B,aAAaC,MAEpDzB,KAAKsD,QAAQ5B,aAAa1B,KAAKsD,QAAQ9B,aAAaC,KAAKkE,IAAI,SAACI,EAASQ,GAAV,OACzD7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMD,IAAKA,EAAK9C,UAAW,iBAAmBsC,EAAQ5D,QAAUqB,EAAKF,QAAQ9B,aAAaC,IAAM,QAAU,iBACrGsE,EAAQ5D,QAAUqB,EAAKF,QAAQ9B,aAAaC,KAAOiB,EAAAC,EAAAC,cAAA,OAAKa,UAAU,sBAAsBD,EAAKF,QAAQ9B,aAAalC,SAAS,GAAxE,KACnDyG,EAAQA,YAMrB/F,KAAKsD,QAAQ9B,cACVkB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAYhD,UAAU,QACrBf,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CACIhC,IAAK,SAAAC,GAAE,OAAInB,EAAKwC,aAAerB,GAC/BgC,WAAY3G,KAAKoG,WACjB3C,UAAU,gBACVoB,YAAY,mBACZ+B,aAAW,uBACXC,mBAAiB,iBAErBnE,EAAAC,EAAAC,cAAC6D,EAAA,EAAWK,OAAZ,KACIpE,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,QAAS/E,KAAK8F,YAAaiB,QAAQ,qBAA3C,UAKR/G,KAAKsD,QAAQ9B,cACbkB,EAAAC,EAAAC,cAAA,OAAKa,UAAU,8BACff,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAASjC,QAAS/E,KAAKsG,UAAWW,KAAK,mBA/DlBvG,IAAMuC,WAA1B4C,EACVX,YAAczE,eCJJyG,mLAEb,OACIxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAUJ,QAAQ,QAClBrE,EAAAC,EAAAC,cAACuE,EAAA,EAAOC,MAAR,CAAcC,KAAK,SACjB3E,EAAAC,EAAAC,cAAA,OACE0E,IAAI,GACJC,IAAI,YACJC,MAAM,KACNC,OAAO,KACPhE,UAAU,6BAEX,kBAZ2B/C,IAAMuC,sCCC3ByE,cACjB,SAAAA,EAAY3E,GAAO,IAAAlC,EAAA,OAAAf,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IACf7G,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAE,KAAAF,OAAAiB,EAAA,EAAAjB,CAAA4H,GAAA1G,KAAAhB,QA0DJ2H,SAAW,aAzDP9G,EAAKQ,MAAQ,CACTuG,YAAY,GAHD/G,mFAOC,IAAA2C,EAAAxD,KAChBiB,QAAQC,IAAIlB,KAAK+C,MAAM8E,WACvB,IAAIC,EAAS,SAACC,GACVvE,EAAKwE,KAAO,IAAIC,IAAK,CACjBJ,UAAWrE,EAAKT,MAAM8E,UACtBK,SAAS,EACTH,WAGJvE,EAAKwE,KAAK3H,GAAG,SAAU,SAACrB,GACpBiC,QAAQC,IAAI,OAAQlC,GAChBwE,EAAKT,MAAM8E,WACX5G,QAAQC,IAAI,mBACZtB,EAASK,OAAOK,KAAK,aAAckD,EAAKT,MAAMoF,KAAMnJ,IAEpDY,EAASK,OAAOK,KAAK,mBAAoBkD,EAAKT,MAAMqF,kBAAmBpJ,KAG1EwE,EAAKT,MAAM8E,YACZ5G,QAAQC,IAAIsC,EAAKT,MAAMsF,aACvB7E,EAAKwE,KAAKM,OAAO9E,EAAKT,MAAMsF,cAEhC7E,EAAKwE,KAAK3H,GAAG,QAAS,SAAAnB,GAAG,OAAI+B,QAAQC,IAAI,QAAShC,KAClDsE,EAAKwE,KAAK3H,GAAG,UAAW,WAEpBmD,EAAKwE,KAAKO,KAAK,iCAEnB/E,EAAKwE,KAAK3H,GAAG,OAAQ,SAACrB,GAElBiC,QAAQC,IAAI,uBAAyBsC,EAAKT,MAAM8E,UAAY,QAAU,QAAU,aAEpFrE,EAAKwE,KAAK3H,GAAG,SAAS,SAAC0H,GACnBvE,EAAKgF,SAASC,UAAYV,EAC1BvE,EAAKgF,SAASE,SAElB9I,EAASK,OAAOI,GAAG,+BAAgC,SAACrB,GAChDwE,EAAKwE,KAAKM,OAAOtJ,MAIzB2J,UAAUC,aACLD,UAAUC,cACXD,UAAUE,oBACVF,UAAUG,iBACVH,UAAUI,eAGdJ,UAAUC,aAAa,CAAEI,OAAO,EAAMC,OAAO,GAAOnB,EAAS,kBAC7DA,uCAOK,IAAAoB,EAAAlJ,KAEL,OAAO0C,EAAAC,EAAAC,cAAA,OAAKa,UAAU,mBAEW,GAAzBzD,KAAKqB,MAAMuG,YAAsB,aAErClF,EAAAC,EAAAC,cAAA,SAAO8B,IAAK,SAAAC,GAAE,OAAIuE,EAAKV,SAAW7D,KAClCjC,EAAAC,EAAAC,cAAA,UAAQmC,QAAS/E,KAAK2H,UAAtB,SACAjF,EAAAC,EAAAC,cAAA,UAAQmC,QAAS/E,KAAK+C,MAAMoG,UAA5B,kBAvE2BzI,IAAMuC,WCKxBmG,6MAEjB/H,MAAM,CACFgI,WAAU,EACVxB,WAAU,KAadvB,UAAU,SAAC6B,EAAKN,GACZhH,EAAKM,SAAS,CACVkI,WAAU,EACVlB,OACAN,kGAfW,IAAArE,EAAAxD,KACfkC,EAASjC,OAAOI,GAAG,qBAAqB,SAACkB,EAAG+H,GACxCrI,QAAQC,IAAI,aACZsC,EAAKrC,SAAS,CACVkI,WAAU,EACVhB,YAAY9G,EACZ6G,kBAAkBkB,uCAc1B,OACI5G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAWC,OAAO,EAAMF,UAAU,OAC9Bf,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAKH,UAAU,cACXf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAGI,GAAI,EAAGH,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAEjCvB,EAAAC,EAAAC,cAAC4G,EAAD,OAEJ9G,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK4F,MAAO,CAACC,WAAW,6BAA8B5F,GAAI,EAAGI,GAAI,EAAGH,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAElFvB,EAAAC,EAAAC,cAAC+G,EAAD,CAAarD,UAAWtG,KAAKsG,cAGrCtG,KAAKqB,MAAMgI,WAAa3G,EAAAC,EAAAC,cAACgH,EAAD,CAAWxB,kBAAmBpI,KAAKqB,MAAM+G,kBAAmBD,KAAMnI,KAAKqB,MAAM8G,KAAME,YAAarI,KAAKqB,MAAMgH,YAAaR,UAAW7H,KAAKqB,MAAMwG,qBAxCxJnH,IAAMuC,WAAnBmG,EACVlE,YAAczE,MCFlBoJ,cAEL,SAAAA,IAAa,IAAAhJ,EAAA,OAAAf,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,IACXhJ,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAE,KAAAF,OAAAiB,EAAA,EAAAjB,CAAA+J,GAAA7I,KAAAhB,QACKqB,MAAM,CACTyI,SAAQ,GAHCjJ,mFAMM,IZVKU,EYULiC,EAAAxD,KACbH,EAAOmC,eAAe+H,QAAQ,WAClC9I,QAAQC,IAAIrB,GACTA,GZbmB0B,EYcV1B,EZdevB,EAAK,wBAAwB,CACxDiD,QYaoB1C,KAAK,SAAAC,GACvB0E,EAAKrC,SAAS,CACZ2I,SAAQ,GACR,WAAKtG,EAAKF,QAAQxB,UAAUhD,EAAOE,UAGvCgB,KAAKmB,SAAS,CACZ2I,SAAQ,qCAOZ,OADA7I,QAAQC,IAAIlB,KAAKsD,SACdtD,KAAKqB,MAAMyI,QACJpH,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OAAf,cAMRf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACRzD,KAAKsD,QAAQhB,KAAaI,EAAAC,EAAAC,cAACoH,EAAD,MAARtH,EAAAC,EAAAC,cAACN,EAAD,cAlCV5B,IAAMuC,WAAlB4G,EACE3E,YAAYzE,EAyCNwJ,mBAAWJ,GChDLK,oLAEb,OACAxH,EAAAC,EAAAC,cAACuH,EAAD,KACKnK,KAAK+C,MAAMC,iBAJgBtC,IAAMuC,WCU1BmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAOhI,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KAAetC,EAAAC,EAAAC,cAAC+H,GAAD,KAAWjI,EAAAC,EAAAC,cAACgI,GAAD,QAAqCC,SAASC,eAAe,SDuHjG,kBAAmBnC,WACrBA,UAAUoC,cAAcC,MAAMnM,KAAK,SAAAoM,GACjCA,EAAaC","file":"static/js/main.0d0322f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import Axios from \"axios\";\nlet port=3030;\nexport let get=(path)=>new Promise((resolve,reject)=>{\n    Axios.get(\"http://18.223.186.79:\"+port+ path).then(result=>{\n        resolve(result.data);\n    }).catch(err=>{\n        reject({\n            status:err.status,\n            data:err.data\n        })\n    });\n})  \n\nexport let post=(path,param)=>new Promise((resolve,reject)=>{\n    Axios.post(\"http://18.223.186.79:\"+port+ path,param).then(result=>{\n        if(result.status==200)\n        resolve(result.data);\n        else{\n            reject({\n                status:result.status,\n                data:result.data\n            })\n        }\n    }).catch(err=>{\n        reject({\n            status:err.status,\n            data:err.data\n        })\n    });\n})","import {get,post} from \"./service\";\n\nexport const getUserList=()=>get(\"/api/user/userList\");\nexport const login=(userName,password)=>post(\"/api/user/login\",{\n    userName,password\n});\nexport const getUserById=(id)=>post(\"/api/user/getUserById\",{\n    id\n})\n\nexport const createUser=(    userName,   phoneNo,  email , gender, password)=>\npost(\"/api/user/createUser\",{\n    userName,\n    phoneNo,\n    email ,\n    gender,\n    password \n})","import socketIO from \"socket.io-client\";\nexport default class SocketIO{\n    constructor(userId){\n        this.userId=userId;\n        this.socket=socketIO.connect('http://18.223.186.79:3030');\n    }\n     static set socket(userId){\n        let instance=new SocketIO(userId);\n        SocketIO.instance=instance;\n        instance.socket.on(\"userIdRequest\",(socket)=>{\n            // console.log(\"hello\",socket)\n            instance.socket.emit(\"register\",userId);\n        })\n     }\n     static get socket(){\n         return SocketIO.instance.socket;\n     }\n}","import {get,post} from  \"./service\";\n\nexport const getAllMessage=(userId,selected_user_id)=> post(\"/api/user/getMessages\",{userId,selected_user_id});","import React from \"react\";\nimport {getUserList} from \"../services/auth\";\nimport {getAllMessage} from \"../services/messages\";\nimport SocketIo from \"../utils/socket\";\nexport const UserContext = React.createContext({});\nclass UserContextClass extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: false,\n            user:{},\n            userList:[],\n            selectedUser:null,\n            storeUser:this.storeUser,\n            selectUserToChat:this.selectUserToChat,\n            sendCallBack:this.sendCallBack,\n            userMessages:{}\n\n        }\n    }\n    getUserList=()=>{\n        getUserList().then(result=>{\n            console.log(result)\n            this.setState({\n                userList:result.data\n            })\n        })\n    }\n    getAllMessage=()=>{\n        getAllMessage(this.state.user.id,this.state.selectedUser._id).then(result=>{\n            \n            this.setState({\n                userMessages: {\n                    ...this.state.userMessages,\n                    [this.state.selectedUser._id] :result.result\n                }\n            });\n        })\n    }\n    selectUserToChat=(user)=>{\n        this.setState({\n            selectedUser:user\n        },this.getAllMessage);\n    }\n    storeUser = (userData) => {\n        let { userName, phoneNo, gender,_id } = userData;\n        sessionStorage.setItem(\"user_id\",userData._id);\n\n        SocketIo.socket=_id;\n        SocketIo.socket.on(\"message\",(data)=>{\n            console.log(data)\n            this.setState({\n\n                userMessages: {\n                    ...this.state.userMessages,\n                    [data.fromId]:!this.state.userMessages[data.fromId]?\n                    [data]:[...this.state.userMessages[data.fromId],data]\n                }\n            })\n        })\n        this.setState({\n            user:{userName, phoneNo, gender,id:_id}, auth: true,\n        },this.getUserList);\n    }\n    sendCallBack=(data,callback)=>{\n        this.setState({\n\n            userMessages: {\n                ...this.state.userMessages,\n                [data.toId]:!this.state.userMessages[data.toId]?\n                [data]:[...this.state.userMessages[data.toId],data]\n            }\n        },callback)\n    }\n    render() {\n        return (\n            <UserContext.Provider value={this.state}>\n                {\n                    this.props.children\n                }\n            </UserContext.Provider>);\n    }\n}\nexport default UserContextClass;\n","import React from \"react\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport \"./login.scss\";\nimport { Link } from \"react-router-dom\";\nimport { getUserList, login } from \"../../services/auth\";\nimport SocketIo from \"../../utils/socket\";\n\nimport { UserContext } from \"../../data-provider/user\";\n\nclass Login extends React.Component {\n    static contextType = UserContext;\n    componentDidMount() {\n        getUserList().then(Response => {\n            console.log(Response)\n        })\n    }\n    login = (e) => { \n        e.preventDefault();\n        e.stopPropagation();\n        let userName = this.userName.value;\n        let password = this.password.value;\n\n        login(userName, password).then(result => {\n            console.log(result)\n            this.context.storeUser(result.data);\n        })\n    }\n    render() {\n        console.log(this.context)\n        return (\n            <div className=\"login-form\">\n                <Container fluid={true}>\n                    <Row>\n                        <Col sm={12} md={4} lg={4} xl={4} xs={12} className=\"login-container card\">\n                            <Container>\n                                <form className='form-container' onSubmit={this.login} >\n                                    <Form.Group as={Row}>\n                                        <Form.Label column sm={4}>User Name</Form.Label>\n                                        <Col sm={8}>\n                                            <Form.Control ref={el => this.userName = el} column sm={10} id=\"username\" type=\"text\" placeholder=\"Please type User name\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row}>\n                                        <Form.Label column sm={4}>Password</Form.Label>\n                                        <Col sm={8}>\n                                            <Form.Control ref={el => this.password = el} column sm={10} id=\"password\" type=\"password\" placeholder=\"Please type Password\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group >\n                                        <Button onClick={this.login} type=\"submit\" className='login-btn'>login</Button>\n                                        <Link className=\"pl-10 link\" to={\"/signup\"}>sign up</Link>\n                                    </Form.Group>\n\n                                </form>  </Container>\n                        </Col>\n                        <Col sm={12} md={6} lg={6} xl={6} xs={12} className='offset-lg-6 offset-xl-6 offset-md-6 offset-sm-0 aside-container'>\n                            <h1>TINDER 2.0 APPLICATION</h1>\n                            <p className=\"content\">\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Maecenas accumsan lacus vel facilisis volutpat est velit egestas dui. Quam id leo in vitae turpis massa sed elementum tempus.\n<br /><br />Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Maecenas accumsan lacus vel facilisis volutpat est velit egestas dui. Quam id leo in vitae turpis massa sed elementum tempus.\n<br /><br />Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Maecenas accumsan lacus vel facilisis volutpat est velit egestas dui. Quam id leo in vitae turpis massa sed elementum tempus.\n</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport Login from \"./login\"\nimport {Link} from \"react-router-dom\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport {createUser}from \"../../services/auth\";\nimport { UserContext } from \"../../data-provider/user\";\nclass SignUp extends React.Component{\n    static contextType=UserContext;\n    createUser=()=>{\n        debugger;\n        createUser(\n            this.userName.value,\n            this.phoneNumber.value,\n            this.email.value,\n            \"MALE\",\n            this.password.value\n            ).then(result=>{\n                this.context.storeUser(result.data);\n            })\n    }\n    render(){\n        return (\n<div className=\"login-form\">\n<Container> \n                    <Row>\n                        <Col sm={5} className=\"login-container card\">\n                        <Container> \n                              <Form  >\n                                <Form.Group as={Row}>\n                                    <Form.Label column  sm={4}>User Name</Form.Label>\n                                    <Col sm={8}>\n                                    <Form.Control ref={el=>this.userName=el} column sm={10} type=\"text\" placeholder=\"Please type User name\" />\n                                        </Col>\n                                </Form.Group>\n                                <Form.Group as={Row}>\n                                    <Form.Label column  sm={4}>phone</Form.Label>\n                                    <Col sm={8}>\n                                    <Form.Control  ref={el=>this.phoneNumber=el} column sm={10} type=\"text\" placeholder=\"Please type phone\" />\n                                        </Col>\n                                </Form.Group>\n                                <Form.Group as={Row}>\n                                    <Form.Label column  sm={4}>email</Form.Label>\n                                    <Col sm={8}>\n                                    <Form.Control  ref={el=>this.email=el} column sm={10} type=\"email\" placeholder=\"Please type email\" />\n                                        </Col>\n                                </Form.Group>\n                                <Form.Group as={Row}>\n                                    <Form.Label column  sm={4}>Password</Form.Label>\n                                    <Col sm={8}>\n                                    <Form.Control  ref={el=>this.password=el} column sm={10} type=\"text\" placeholder=\"Please type Password\" />\n                                        </Col>\n                                </Form.Group>\n                                <Form.Group >\n                                <Button onClick={this.createUser} >SignUp</Button>\n                                <Link className=\"pl-10\" to={\"/login\"}>goto login</Link>\n                                </Form.Group>\n                               \n                            </Form>  </Container>\n                            </Col>\n                            </Row>\n                            </Container> \n</div>\n        )\n    }\n}\n\nexport default SignUp;","import React from \"react\";\nimport Login from \"./login\";\nimport SignUp from \"./signup\";\nimport {withRouter,Switch,Route,Redirect} from \"react-router-dom\";\nclass INDEX extends React.Component{\n    render(){\n        return (\n<Switch>\n        <Redirect path=\"/\" exact to=\"/login\" />\n        <Route path=\"/login\" component={Login}/>\n      \n        <Route path=\"/signup\" component={SignUp}/>\n      </Switch> \n        )\n    }\n}\n\nexport default INDEX;","import React from \"react\";\nimport {ListGroup,ListGroupItem} from \"react-bootstrap\";\nimport {UserContext} from \"../../data-provider/user\";\nimport \"./chat_user_list.scss\";\nexport default class ChatUserList extends React.Component{\n    static contextType = UserContext;\n    render(){\n        console.log(this.context)\n        return (<div className=\"chat_list\">\n            <ListGroup>\n                {\n                    this.context.userList.map(user=>this.context.user.id!=user._id&&<ListGroupItem className={\"userlist_group \"+(user==this.context.selectedUser?\" active\":\"\")} onClick={()=>this.context.selectUserToChat(user)}>\n                    <div className=\"user-icon\">\n                        {user.userName[0]}\n                    </div>\n                    <div className=\"user-name\">\n                    {user.userName}\n                    </div>\n                       \n                    </ListGroupItem>)\n                }\n            </ListGroup>\n        </div>)\n    }\n}","import React from \"react\";\nimport { Container, InputGroup, FormControl, Button, ListGroup, ListGroupItem, Card } from \"react-bootstrap\";\nimport \"./chat_content.scss\";\nimport SocketIo from \"../../utils/socket\";\nimport { UserContext } from \"../../data-provider/user\";\nimport {MDBIcon} from \"mdbreact\"\nexport default class chatContent extends React.Component {\n    static contextType = UserContext;\n    sendMessage = () => {\n        let message = this.messageInput.value;\n        this.messageInput.value = \"\";\n        if (message) {\n            SocketIo.socket.emit(\"message_user\", {\n                message,\n                toId: this.context.selectedUser._id\n            }, (result) => {\n                console.log(this.context);\n                this.context.sendCallBack(result, () => {\n                    this.sendMessageRef.scrollTop = this.sendMessageRef.scrollHeight;\n                })\n            });\n        }\n    }\n\n    onKeyEnter = (e) => {\n        if (e.keyCode == 13) {\n            e.preventDefault();\n        }\n    }\n    videoCall=()=>{\n        this.props.videoCall(this.context.selectedUser._id,true);\n    }\n    render() {\n        console.log(this.context.selectedUser)\n        return (\n            <Container fluid={true} className='p-0'>\n                <div className=\"message_container\" ref={el => this.sendMessageRef = el} >\n                    {\n                        this.context.selectedUser\n                        &&\n                        this.context.userMessages[this.context.selectedUser._id]\n                        &&\n                        this.context.userMessages[this.context.selectedUser._id].map((message, key) => (\n                            <Card key={key} className={\"message-card \" + (message.fromId == this.context.selectedUser._id ? \" left\" : \" float-right\")}>\n                                {message.fromId == this.context.selectedUser._id && <div className=\"user-icon-content \">{this.context.selectedUser.userName[0]} </div>}\n                                {message.message}\n                            </Card>\n                        ))\n                    }\n                </div>\n                {\n                    this.context.selectedUser\n                    && <InputGroup className=\"mb-1\">\n                        <FormControl\n                            ref={el => this.messageInput = el}\n                            onKeyPress={this.onKeyEnter}\n                            className=\"message_input\"\n                            placeholder=\"start conversion\"\n                            aria-label=\"Recipient's username\"\n                            aria-describedby=\"basic-addon2\"\n                        />\n                        <InputGroup.Append>\n                            <Button onClick={this.sendMessage} variant=\"outline-secondary\">Send</Button>\n                        </InputGroup.Append>\n                    </InputGroup>}\n\n                {\n                    this.context.selectedUser &&\n                    <div className=\"chat-action-icon-container\">\n                    <MDBIcon onClick={this.videoCall} icon=\"video\" />\n                    </div>\n                }\n            </Container>\n        )\n    }\n}","import React from \"react\";\n\nimport {Navbar} from \"react-bootstrap\";\nexport default class NavComponent extends React.Component{\n    render(){\n        return(\n            <Navbar   variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n              <img\n                alt=\"\"\n                src=\"/logo.svg\"\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n              {' McHat'}\n            </Navbar.Brand>\n          </Navbar>\n        )\n    }\n}","import React from \"react\";\nimport \"./video-chat.scss\";\nimport Peer from 'simple-peer';\nimport SocketIO from \"../../../utils/socket\";\nexport default class VideoChat extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            connecting: true\n        };\n\n    }\n    componentDidMount() {\n        console.log(this.props.initiator)\n        let gotMedia=(stream) => {\n            this.peer = new Peer({\n                initiator: this.props.initiator,\n                trickle: false,\n                stream\n            });\n\n            this.peer.on('signal', (data) => {\n                console.log(\"myid\", data)\n                if (this.props.initiator) {\n                    console.log(\"sockete emitted\")\n                    SocketIO.socket.emit(\"sendPeerId\", this.props.toID, data)\n                } else {\n                    SocketIO.socket.emit(\"sendIdToIntiator\", this.props.initiatorSocketId, data)\n                }\n            });\n            if (!this.props.initiator) {\n                console.log(this.props.initiatorId)\n                this.peer.signal(this.props.initiatorId);\n            }\n            this.peer.on('error', err => console.log('error', err))\n            this.peer.on('connect', () => {\n                // wait for 'connect' event before using the data channel\n                this.peer.send('hey peer2, how is it going?')\n            })\n            this.peer.on('data', (data) => {\n                // got a data channel message\n                console.log('got a message from ' + (this.props.initiator ? \"initi\" : \"none\") + ' + data')\n            })\n            this.peer.on(\"stream\",(stream)=>{\n                this.videoRef.srcObject=  stream;\n                this.videoRef.play();\n            })\n            SocketIO.socket.on(\"receiveSocketIdFromInitiator\", (data) => {\n                this.peer.signal(data);\n            })\n\n        }\n        navigator.getUserMedia = ( \n             navigator.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia\n          )\n            \n        navigator.getUserMedia({ video: true, audio: true },gotMedia,()=>\n        gotMedia() )\n\n\n    }\n    sendData = () => {\n\n    }\n    render() {\n\n        return <div className=\"video-container\">\n            {\n                this.state.connecting == true && \"connecting\"\n            }\n            <video ref={el => this.videoRef = el} />\n            <button onClick={this.sendData}> send</button>\n            <button onClick={this.props.onCancel}>cancel</button>\n        </div>\n    }\n}","import React from \"react\";\nimport { Container, Row, Col,FormControl } from \"react-bootstrap\";\nimport { UserContext } from \"../../data-provider/user\";\nimport ChatList from \"./chat_users_list\";\nimport ChatContent from \"./chat_content\";\nimport NavBarComponent from  \"../utills/navbar\";\nimport VideoChat from \"./video/video-chat\";\nimport SocketIo from \"../../utils/socket\";\n\nexport default class chat extends React.Component {\n    static contextType = UserContext;\n    state={\n        showVideo:false,\n        initiator:false\n    }\n    componentDidMount(){\n        SocketIo.socket.on(\"receiveInitiatorId\",(id,socketId)=>{\n            console.log(\"reivedsss\")\n            this.setState({\n                showVideo:true,\n                initiatorId:id,\n                initiatorSocketId:socketId\n            })\n        })\n        \n    }\n    videoCall=(toID,initiator)=>{\n        this.setState({\n            showVideo:true,\n            toID,\n            initiator\n        })\n\n    }\n    render() {\n        return (\n            <div>\n                <NavBarComponent/>\n                <Container fluid={true} className='p-0'>\n                    <Row className='no-gutters'>\n                        <Col sm={6} xs={6} md={3} lg={3} xl={3}>\n                        {/* <input type=\"text\" /> */}\n                            <ChatList />\n                        </Col>\n                        <Col style={{background:\"rgba(252, 252, 255, 0.92)\"}} sm={6} xs={6} md={9} lg={9} xl={9}>\n                         \n                            <ChatContent videoCall={this.videoCall} />\n                        </Col>\n                    </Row>\n                   {this.state.showVideo && <VideoChat initiatorSocketId={this.state.initiatorSocketId} toID={this.state.toID} initiatorId={this.state.initiatorId} initiator={this.state.initiator}/>}\n                </Container>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Auth from \"./component/auth\";\nimport {UserContext} from \"./data-provider/user\";\nimport {withRouter,Switch,Route} from \"react-router-dom\";\nimport {getUserById} from \"./services/auth\";\nimport Chat from \"./component/chat/chat\"\nclass  App extends React.Component {\n  static contextType=UserContext;\n  constructor(){\n    super();\n    this.state={\n      loading:true\n    }\n  }\n  componentDidMount(){\n    let userId=sessionStorage.getItem(\"user_id\"); \n    console.log(userId)\n    if(userId){\n    getUserById(userId).then(result=>{\n      this.setState({\n        loading:false\n      },()=>{this.context.storeUser(result.data)})\n    })\n  }else{\n    this.setState({\n      loading:false\n    });\n  }\n    \n  }\n  render(){\n  console.log(this.context)\n  if(this.state.loading){\n    return (<div className=\"App\">\n      ...loading\n    </div>)\n  }\n  return (\n\n    <div className=\"App\"> \n        { !this.context.auth?<Auth/>:<Chat/>}\n   \n      \n    </div>\n  );\n}\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport UserProvider from \"./user\";\nexport default class MyProvider extends React.Component{\n    render(){\n        return (\n        <UserProvider>\n            {this.props.children}\n        </UserProvider>)\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport MyProvide from \"./data-provider/provider\";\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(<BrowserRouter><MyProvide><App /></MyProvide></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}